{:shadow {:dev-http {:port 8000}
          :http {:port 8001 :host "0.0.0.0"}; "localhost"}
          :nrepl {:port 8002}}

 :webly {; user app
         :title "webly"
         :spinner "webly/loading.svg"
         :icon "webly/icon/pinkgorilla32.png" ; "webly/icon/silver.ico"  ; gorilla is much smaller than silver
         :loading-image-url "webly/loadimage/library.jpg" ; 
         :start-user-app [:webly/start-default]  ; after config loaded
         ; theme
         :theme {:available {:webly-dialog {true ["webly/dialog.css"]
                                            false []}
                             :tailwind-full {"light" ["tailwindcss/dist/tailwind.min.css"]
                                             "dark" ["tailwindcss/dist/tailwind-dark.min.css"]
                                             false []
                                             }
                             :tailwind-girouette {true ["girouette.css"]
                                                  false []}
                             :fontawesome {true ["@fortawesome/fontawesome-free/css/all.min.css"]
                                           false []}
                             :fonts-google    {true ["fonts-google/fonts.css"]
                                               false []
                                               }}
                 :current {:webly-dialog true
                           :tailwind-full false ; "light" ; true
                           :tailwind-girouette true
                           :fontawesome true
                           :fonts-google false}}
         ; cljs
         :ns-cljs []
         :modules {}
         ; clj
         :ns-clj []
         :start-service nil
         :ring-handler "webly.app.app/ring-handler" ; no need to change 
         ; routes
         :routes {:app {}
                  :api {}}
;
         }

 :prefix "/r/" ; resource route prefix ; most web-apps can leave this at default values


 :webly/web-server {:port 8080
                    :host "0.0.0.0"
                    :ssl-port 8443
                    :keystore "../webserver/certs/keystore.p12"
                    :key-password "password"; Password you gave when creating the keystore
                    :jetty-ws {"/api/chsk" :ws/chsk-get}}



 :google-analytics {:enabled false ; true
                    :id "UA-154548494-1"} ; not a secret 

 ; creds (set them in creds.edn resource)
 :oauth2 {:token-path ".webly/tokenstore/"
          :github {;https://docs.github.com/en/rest/reference/permissions-required-for-github-apps
                   :client-id        ""
                   :client-secret    ""
                   :token-prefix "token "
                   :scope          [;https://docs.github.com/en/developers/apps/scopes-for-oauth-apps
                                    "user"
                                    ;"user:email" ; this includes ONLY the user email
                                    "gist"
                                    "repo"]}
          :google {:client-id        ""
                   :client-secret    ""
                   :token-prefix "Bearer "
                   :scope
                   [;https://developers.google.com/identity/protocols/oauth2/scopes
                    ;"offline_access" ; does not work!
                    "openid" ; The scope parameter must begin with the openid value and then include the profile value, the email value, or both.
                    "email" ; If the email scope value is present, the ID token includes email and email_verified claims.
                    "profile" ; he profile scope value is present, the ID token might (but is not guaranteed to) include the user's default profile claims.
                    "https://www.googleapis.com/auth/userinfo.email"
                    ; readonly 
                    "https://www.googleapis.com/auth/spreadsheets.readonly"
                    "https://www.googleapis.com/auth/drive.readonly"
                    "https://www.googleapis.com/auth/gmail.readonly"
                    "https://www.googleapis.com/auth/drive.photos.readonly"
                    ; edit
                    "https://www.googleapis.com/auth/spreadsheets"
                    "https://www.googleapis.com/auth/calendar"
                    "https://www.googleapis.com/auth/drive"
                    "https://www.googleapis.com/auth/drive.appdata"
                    "https://www.googleapis.com/auth/drive.file"
                    "https://www.googleapis.com/auth/drive.metadata"
                    "https://www.googleapis.com/auth/drive.metadata.readonly"
                    "https://www.googleapis.com/auth/cloud-platform"

                    "https://docs.google.com/feeds/"
                    "https://spreadsheets.google.com/feeds"

                    "https://www.googleapis.com/auth/cloud_search"]}


          :xero {:client-id        ""
                 :client-secret    ""
                 :token-prefix "Bearer " 
                 :scope          ["offline_access" ; refresh_token
                                  "openid"
                                  "profile"
                                  "email"
                                  "accounting.settings"
                                  "accounting.reports.read"
                                  "accounting.journals.read"
                                  "accounting.contacts"
                                  "accounting.attachments"
                                  "accounting.transactions"
                                  "accounting.transactions.read"]}
           :woo {:scope ["read" 
                         ;"write" 
                         ;"read_write"
                         ]
                 :app_name "goldly-crb"
                 :user_id "goldly-crb"}
                                  
                                  }

 :timbre-loglevel [[#{"pinkgorilla.nrepl.client.connection"} :info]
                   [#{"org.eclipse.jetty.*"} :info]
                   [#{"webly.*"} :info]
                   [#{"*"} :info]]

 :keybindings [; https://github.com/piranha/keybind
               ; shift, ctrl, alt, win, cmd, defmod, "left" "right"
               ; "meta-shift-l" "alt-shift-p" "ctrl-shift-left" "ctrl-shift-right"
               {:kb "alt-g k" :handler [:palette/show]           :desc "Keybindings dialog"}
               {:kb "esc"     :handler [:modal/close]            :desc "Dialog Close"} ; for ALL dialogs!
               {:kb "alt-g t" :handler [:reframe10x-toggle] :desc "10x visibility toggle"}]

 :settings {:use-localstorage  false}

 
 }