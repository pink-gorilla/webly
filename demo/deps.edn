{:paths ["src"
         "target/node_modules"  ; css png resources from npm modules (tailwind)
         "resources"]
 :deps {; lazy ui modules:
        org.pinkgorilla/ui-highcharts {:mvn/version "0.0.29"}
        org.pinkgorilla/ui-vega {:mvn/version "0.3.220"}
        org.pinkgorilla/pinkie {:mvn/version "0.5.232"}
        org.pinkgorilla/webly {:local/root "../webly" :deps/manifest :deps}
        }
 :aliases
 {:cljfmt {:extra-deps {cljfmt/cljfmt {:mvn/version "0.9.2"}}
           :main-opts ["-m" "cljfmt.main"
                       "--indents" "../webly/cljfmt.edn"
                                  ; "fix"  "check"
                       ]}

            ; https://github.com/clj-kondo/clj-kondo/blob/master/doc/jvm.md
  :lint {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2024.05.24"}}
         :main-opts ["-m" "clj-kondo.main"
                     "--fail-level" "error"
                     "--config" "../webly/cljkondo.edn"
                     "--lint"]}

  :test-clj {:extra-paths ["src"
                           "resources"
                           "test"
                           "test/resources"]
             :extra-deps {org.pinkgorilla/ui-repl {:mvn/version "0.1.105"} ; http cors test
                          io.github.cognitect-labs/test-runner
                          {:git/url "https://github.com/cognitect-labs/test-runner.git"
                           :sha "cc75980b43011773162b485f46f939dc5fba91e4"}
                          ring/ring-mock {:mvn/version "0.4.0"}}
             :main-opts ["-m" "cognitect.test-runner"]
             :exec-fn cognitect.test-runner.api/test}

  ; demo
  ; unit tests use demo profile for resource tests
  ; so the demo serves two purposes
  ; 1. ilustrate links in web-app
  ; 2. run unit tests 

  ; BUILD BUNDLE (then exit)
  :webly {:extra-deps {org.pinkgorilla/ui-repl {:mvn/version "0.1.108"} ; http cors test
                       }
          :extra-paths ["src" "resources" "test" "test/resources"]
          :exec-fn webly.app.app/webly-build
          :exec-args {:config ["demo.edn"] 
                      :profile "npm-install"}}

  :npm-install {:exec-args {:profile "npm-install"}}
  :compile {:exec-args {:profile "compile"}}
  :release {:exec-args {:profile "release"}}
  :release-adv {:exec-args {:profile "release-adv"}}
  :static {:exec-args {:profile "static"}}
  :ci {:exec-args {:profile "ci"}}

  ; RUN SERVICES (keep running)
  :run {:exec-fn modular.system/start!
        :exec-args {:profile "jetty"
                    :services "demoservices.edn"}}

  :httpkit {:extra-deps {http-kit/http-kit {:mvn/version "2.5.3"}}
            :exec-args {:profile "httpkit"}}
  :jetty {:exec-args {:profile "jetty"}}
  :watch {:exec-args {:profile "watch"}}

  :demo-build {:extra-deps {org.pinkgorilla/ui-highcharts {:mvn/version "0.0.29"}
                            org.pinkgorilla/ui-vega {:mvn/version "0.3.220"}}
               :exec-fn demo.test/test}

  ;
  }}



