
  ; https://github.com/jgrodziski/metav#spit-or-render-current-version-in-a-file
  :spit {:extra-deps {;metav/metav {:mvn/version "1.6.7"}
                      jgrodziski/metav {:git/url "https://github.com/jgrodziski/metav.git"
                                        :sha "e8bffd9b2a5c27f552eec96ad6c72ce9b5dcc372"}}
         :main-opts ["-m" "metav.spit"
                     "--output-dir" "."
                     "--namespace" "webly-version"
                     "--formats" "edn"]}

:garamond
{:main-opts ["-m" "garamond.main"]
 :extra-deps {com.workframe/garamond {:mvn/version "0.4.0"}}}

  ;https://github.com/applied-science/deps-library 1.0.861
:release
{:extra-deps {applied-science/deps-library {:mvn/version "0.4.0"}}
 :main-opts ["-m" "applied-science.deps-library"]}

:jar
   ; alternative approach culd be depstar:
   ; If you do not sync the pom, depstar will take it as-is -- try :sync-pom false (or just remove that option, it should default to false).
{:extra-deps {com.github.seancorfield/depstar {:mvn/version "2.1.303"}}
 :exec-fn hf.depstar/jar
 :exec-args {:pom-file "pom.xml"
             :jar "target/webly.jar"
             :group-id "org.pinkgorilla"
             :artifact-id "webly"
             :sync-pom true
               ; :sync-pom -- if true, will run the equivalent of clojure -Spom to create or update your pom.xml file prior to building the JAR file
             :paths-only false
               ; :paths-only -- if true, only use :paths and :extra-paths from the project basis (and do not treat :local/root and :git/url 
               ; as providing source dependencies); new in 2.0.206
             :verbose true
             :jar-type :thin ; :uber
             }}