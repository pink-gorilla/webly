{:paths ["target/node_modules"  ; css png resources from npm modules (tailwind)
         "demo-webly/target/node_modules"
         ]
 :deps {org.pinkgorilla/webly {:local/root "../webly" :deps/manifest :deps}}
 :aliases
 {:test-clj {:extra-paths ["src"
                       "resources"
                       "test"
                       "test/resources"]
         :extra-deps {org.slf4j/slf4j-nop {:mvn/version "1.7.32"}
                      org.pinkgorilla/ui-repl {:mvn/version "0.0.34"} ; http cors test
                      io.github.cognitect-labs/test-runner
                      {:git/url "https://github.com/cognitect-labs/test-runner.git"
                       :sha "dd6da11611eeb87f08780a30ac8ea6012d4c05ce"}
                      ring/ring-mock {:mvn/version "0.4.0"}}
         :main-opts ["-m" "cognitect.test-runner"]
         :exec-fn cognitect.test-runner.api/test}

  :garamond
  {:main-opts ["-m" "garamond.main"]
   :extra-deps {com.workframe/garamond {:mvn/version "0.4.0"}}}

  ;https://github.com/applied-science/deps-library 1.0.861
  :release
  {:extra-deps {applied-science/deps-library {:mvn/version "0.4.0"}}
   :main-opts ["-m" "applied-science.deps-library"]}

  :jar
   ; alternative approach culd be depstar:
   ; If you do not sync the pom, depstar will take it as-is -- try :sync-pom false (or just remove that option, it should default to false).
  {:extra-deps {com.github.seancorfield/depstar {:mvn/version "2.1.303"}}
   :exec-fn hf.depstar/jar
   :exec-args {;:pom-file "pom2.xml"
               :jar "target/webly.jar"
               :group-id "org.pinkgorilla"
               :artifact-id "webly"
               :sync-pom true
               ; :sync-pom -- if true, will run the equivalent of clojure -Spom to create or update your pom.xml file prior to building the JAR file
               :paths-only false
               ; :paths-only -- if true, only use :paths and :extra-paths from the project basis (and do not treat :local/root and :git/url 
               ; as providing source dependencies); new in 2.0.206
               :verbose true
               :jar-type :thin ; :uber
               }}

  :deploy-jar
  {:replace-deps {slipset/deps-deploy {:mvn/version "0.2.0"}}
   :exec-fn deps-deploy.deps-deploy/deploy
   :exec-args {:installer :remote
               :artifact "target/webly.jar"}}

  :tailwind-girouette-webly
  {:exec-fn webly.user.tailwind.generator/generate-tailwind-webly}

  :tailwind-girouette-usage
  {:ns-default girouette.processor
   :exec-fn process
   :exec-args {:source-paths ["src"]
               :css {;:output-file "target/webly/public/girouette.edn"
                     ;:output-format :css-classes
                     :output-file "target/webly/public/girouette.css"}
               :garden-fn webly.user.tailwind.grammar/class-name->garden
               :apply-classes webly.user.tailwind.css/composed-classes
               :watch? false}}

  :tailwind-girouette-list
  {:ns-default girouette.processor
   :exec-fn process
   :exec-args {:source-paths ["src"
                              "../frontend/src"]
               :css {:output-file "target/webly/public/girouette.edn"
                     :output-format :css-classes
                     :source-paths ["src"
                                    "../frontend/src"]}
               :garden-fn webly.user.tailwind.grammar/class-name->garden
               :apply-classes webly.user.tailwind.css/composed-classes
               :watch? false}}


  ; demo
  ; unit tests use demo profile for resource tests
  ; so the demo serves two puroses
  ; 1. ilustrate links in web-app
  ; 2. run unit tests 

  :demo-webly {:extra-paths ["src"
                             "resources"
                             "test"
                             "test/resources"]
               :extra-deps {org.slf4j/slf4j-nop {:mvn/version "1.7.32"}
                            org.pinkgorilla/ui-repl {:mvn/version "0.0.34"} ; http cors test
                            }
               :exec-fn webly.user.app.app/webly-run
               :exec-args {:config "demo.edn"
                           :profile "npm-install"}}



  ;
  }}