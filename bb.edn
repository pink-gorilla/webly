{:paths ["script"]
 :deps {;borkdude/gh-release-artifact
       ; {:git/url "https://github.com/borkdude/gh-release-artifact"
       ;  :sha "2f8898d84126a4e922c490f8614211a8b0cf67cd"}
       ; com.github.liquidz/antq {:mvn/version "RELEASE"}
       ; 
        }

 :tasks {:requires [deps webly]
         ; dev tools
         lint (webly/clojure "webly" "-M:lint" "src" "../oauth2" "../webserver")
         cljfmt-check (webly/clojure "webly" "-M:cljfmt" "check" "src" "../oauth2" "../webserver")
         cljfmt-fix (webly/clojure "webly" "-M:cljfmt" "fix" "src" "../oauth2" "../webserver")
         deps-tree (webly/clojure "webly" "-X:deps" "tree")
         outdated (webly/clojure "webly" "-M:outdated")

         ; build
         clean (do (webly/clean-project ".")
                   (webly/clean-project "./demo-webly")
                   (webly/clean-project "./demo-repl")
                   (webly/clean-project "./webly")
                   (webly/clean-project "./webserver"))
         tailwind-girouette-usage (webly/clojure "demo-webly" "-X:tailwind-girouette-usage")
         tailwind-girouette-webly (webly/clojure "demo-webly" "-X:tailwind-girouette-webly")
         npm-install (webly/run "demo-webly" "demo-webly" "npm-install")
         build-ci (webly/run "demo-webly" "demo-webly" "ci")
         copy-resources (shell {:dir "demo-webly"} "../script/copy_res.sh")
         get-fonts  (shell {:dir "demo-webly"} "../script/get-fonts.sh")
         merge-deps (deps/merge-deps "./demo-webly"
                                     ["./frontend"
                                      "./webserver"
                                      "./websocket"
                                      "./oauth2"]
                                     "./ci/deps.edn")
         build {:depends [npm-install
                          build-ci
                          tailwind-girouette-webly
                          copy-resources
                          get-fonts
                          merge-deps]
                :task (shell "echo" "cljs bundle has been built!")}

         ; tests
         test-clj (webly/clojure "demo-webly" "-M:test-clj")
         test-cljs (shell {:dir "demo-webly"} "npm" "test")

         ;; CI
         ci-check {:depends [cljfmt-check
                             build
                             test-clj
                             test-cljs]
                   :task (shell "echo" "ci checks are ok!")}

         commit-check {:depends [clean
                                 cljfmt-fix
                                 ci-check]
                       :task (shell "echo" "all good - you can push to github")}

         ;; JAR
         show-jar (shell {:dir "demo-webly"} "fastjar" "tf" "target/webly.jar")
         show-jar-pom (shell {:dir "demo-webly"} "fastjar" "xf" "target/webly.jar" "META-INF/maven/org.pinkgorilla/webly/pom.xml")
         show-jar-manifest (shell {:dir "demo-webly"} "fastjar" "xf" "target/webly.jar" "META-INF/MANIFEST.MF")
         show-git-tag (webly/clojure "webly" "-M:garamond")
         git-tag-patch (webly/clojure "." "-M:garamond")
         git-tag-minor (webly/clojure "demo-webly" "-M:garamond tag --minor")
         ;clojure -M:release tag --minor

         ;; demos
         demo-webserver-https (webly/clojure "webserver" "-X:webserver")
         demo-web-requests-google (webly/clojure "demo-repl" "-X:web-requests-google")
         demo-web-requests-xero (webly/clojure "demo-repl" "-X:web-requests-xero")
         demo-web-requests-github (webly/clojure "demo-repl" "-X:web-requests-github")

         demo-webly (webly/run "demo-webly" "demo-webly" "watch2")


 ;        
         }}